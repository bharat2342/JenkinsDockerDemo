pipeline 
{ 
	agent any   //This is the any kind of Docker build
	environment
	{
		dockerHome=tool 'myDocker'     //This is configure from the jenkins configure of Docker tab
		mavenHome=tool 'myMaven'
		PATH= "$dockerHome/bin:$mavenHome/bin:$PATH"
	}
	stages
	{
		stage('Checkout')
		{
			steps     
		{
		sh 'mvn --version'
		sh 'docker --version'
		echo "Build"
		echo "PATH- $PATH"
		echo "$BUILD_NUMBER- $env.BUILD_NUMBER"
		echo "$BUILD_ID- $env.BUILD_ID"
		echo "$JOB_NAME- $env.JOB_NAME"
		echo "$BUILD_TAG- $env.BUILD_TAG"
		echo "$BUILD_URL- $env.BUILD_URL"
	    } 
		}

		stage('Compile')
		{	
			steps
			{
				sh "mvn clean compile"

			}			
		}
		stage('Test')
		{
			steps     
		{
		        sh "mvn test"
	    } 
		}

		stage('Integration Test')
		{
			steps     
		{
				sh "mvn failsafe:integration-test failsafe:verify"
	    } 
		}


		stage('Package')
		{
			steps     
		{
				sh "mvn package -DskipTests"  //Actually create the jar file
	    } 
		}

		stage('Build Docker Image')
		{

			steps
			{ 

				"docker build -t in28min/currency-exchange-devops:$env.BUILD_TAG"
				//other way
				//script{
					//dockerImage=docker.build("in28min/currency-exchange-devops:$env.BUILD_TAG"")
				//}

			}



		}

		stage('Push Docker Image')
		{

			steps
			{ 
				
				//script{
					//docker.withRegistry('','dockerhub'){   //This is for the creditendals
					//dockerImage.push();
					//dockerImage.push('latest');
				//}
			//}

			}



		}



	}

	post{
		always{
			echo 'I am awesome. I run always'
		}
		success{
			echo 'I run only when it is sucessful'
		}
		failure{
			echo 'I run only when it is failure'
		}

	}
	//changed


}
